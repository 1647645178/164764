CookBook

--------第一章--------
Python 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]
Type "copyright", "credits" or "license" for more information.

IPython 7.8.0 -- An enhanced Interactive Python.

w=[1,1,1,2,2,3]

from collections import Counter

wc=Counter(w)

a=wc.most_common(2)

a
Out[5]: [(1, 3), (2, 2)]

wc.update()

wc
Out[7]: Counter({1: 3, 2: 2, 3: 1})

class User:
    def_init_(self,user_id)
    self.user_id=user_id
    def  _repr_(self):
        return 'User({})'.format(self.user_id)
        
Traceback (most recent call last):

  File "<ipython-input-8-c8b9ca250f7c>", line 1, in <module>
    class User:

  File "<ipython-input-8-c8b9ca250f7c>", line 2, in User
    def_init_(self,user_id)

NameError: name 'def_init_' is not defined




class User:
    def__init__(self,user_id)
    self.user_id=user_id
    def  __repr__(self):
        return 'User({})'.format(self.user_id)
        
Traceback (most recent call last):

  File "<ipython-input-9-7cd6e6810379>", line 1, in <module>
    class User:

  File "<ipython-input-9-7cd6e6810379>", line 2, in User
    def__init__(self,user_id)

NameError: name 'def__init__' is not defined




class User:
    def __init__(self,user_id)
    self.user_id=user_id
    def  __repr__(self):
        return 'User({})'.format(self.user_id)
  File "<ipython-input-10-894c834986f6>", line 2
    def __init__(self,user_id)
                              ^
SyntaxError: invalid syntax




class User:
    def __init__(self,user_id):
        self.user_id=user_id
    def  __repr__(self):
        return 'User({})'.format(self.user_id)
        

users=[User(23),user(3),User(99)]
Traceback (most recent call last):

  File "<ipython-input-12-7645bd143d45>", line 1, in <module>
    users=[User(23),user(3),User(99)]

NameError: name 'user' is not defined




users=[User(23),User(3),User(99)]

sorted(users,key=lambda u: u,user_id)
  File "<ipython-input-14-5c8fe9ed8fad>", line 1
    sorted(users,key=lambda u: u,user_id)
                                ^
SyntaxError: positional argument follows keyword argument




sorted(users,key=lambda u: u.user_id)
Out[15]: [User(3), User(23), User(99)]

from operator import attrgetter

sorted(users,key=attrgetter('user_id'))
Out[17]: [User(3), User(23), User(99)]

min(user,key=attrgetter('user_name'))
Traceback (most recent call last):

  File "<ipython-input-18-9a9e70eb7113>", line 1, in <module>
    min(user,key=attrgetter('user_name'))

NameError: name 'user' is not defined




min(usesr,key=attrgetter('user_name'))
Traceback (most recent call last):

  File "<ipython-input-19-f83322a96f15>", line 1, in <module>
    min(usesr,key=attrgetter('user_name'))

NameError: name 'usesr' is not defined




min(users,key=attrgetter('user_name'))
Traceback (most recent call last):

  File "<ipython-input-20-2de890a3f6ee>", line 1, in <module>
    min(users,key=attrgetter('user_name'))

AttributeError: 'User' object has no attribute 'user_name'




min(users,key=attrgetter('user_id'))
Out[21]: User(3)

man(users,key=attrgetter('user_id'))
Traceback (most recent call last):

  File "<ipython-input-22-95390105d206>", line 1, in <module>
    man(users,key=attrgetter('user_id'))

NameError: name 'man' is not defined




max(users,key=attrgetter('user_id'))
Out[23]: User(99)

rows=[
{'address':'5412 CLARK','date':'07/01/2012'},
{'address':'1412 CLARK','date':'07/01/2016'},
{'address':'2412 CLARK','date':'07/01/2019'}]

from operator import itemgetter

from itertools import groupby

row.sort(key=itemgetter('data'))
Traceback (most recent call last):

  File "<ipython-input-27-ffe702f8eb0d>", line 1, in <module>
    row.sort(key=itemgetter('data'))

NameError: name 'row' is not defined




rows.sort(key=itemgetter('data'))
Traceback (most recent call last):

  File "<ipython-input-28-ded3f87680e0>", line 1, in <module>
    rows.sort(key=itemgetter('data'))

KeyError: 'data'




rows.sort(key=itemgetter('date'))

rows
Out[30]: 
[{'address': '5412 CLARK', 'date': '07/01/2012'},
 {'address': '1412 CLARK', 'date': '07/01/2016'},
 {'address': '2412 CLARK', 'date': '07/01/2019'}]

from date,items in groupby(rows,key=itemgetter('date')):
    print(date)
  File "<ipython-input-31-ded8b3e4eaf1>", line 1
    from date,items in groupby(rows,key=itemgetter('date')):
             ^
SyntaxError: invalid syntax




from date,items in groupby(rows,key=itemgetter('date')):
    print(date)/
  File "<ipython-input-32-4dd3b05cfc92>", line 1
    from date,items in groupby(rows,key=itemgetter('date')):
             ^
SyntaxError: invalid syntax




from date,items in groupby(rows,key=itemgetter('date'))
    print(date)\
    for i in items:
        print('  ',i)
  File "<ipython-input-33-e9dafca7d617>", line 1
    from date,items in groupby(rows,key=itemgetter('date'))
             ^
SyntaxError: invalid syntax




from date,items in groupby(rows ,key=itemgetter('date'))
    print(date)\ 
    for i in items:
        print('  ',i)
  File "<ipython-input-34-d2edb808cae3>", line 1
    from date,items in groupby(rows ,key=itemgetter('date'))
             ^
SyntaxError: invalid syntax




runfile('C:/Users/16476/untitled0.py', wdir='C:/Users/16476')
Traceback (most recent call last):

  File "d:\Users\16476\Anaconda3\lib\site-packages\IPython\core\interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)

  File "<ipython-input-35-a188ba00e4e9>", line 1, in <module>
    runfile('C:/Users/16476/untitled0.py', wdir='C:/Users/16476')

  File "d:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 827, in runfile
    execfile(filename, namespace)

  File "d:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 110, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "C:/Users/16476/untitled0.py", line 9
    print('  ',i)
                 
^
SyntaxError: EOF while scanning triple-quoted string literal




from date,items in groupby(rows ,key=itemgetter('date')):
    print(date)\ 
    for i in items:
        print('  ',i)
  File "<ipython-input-36-665a94da095b>", line 1
    from date,items in groupby(rows ,key=itemgetter('date')):
             ^
SyntaxError: invalid syntax




from date,items in groupby(rows,key=itemgetter('date')):
    print(date)\
    for i in items:
        print('  ',i)
  File "<ipython-input-37-98ac19b98562>", line 1
    from date,items in groupby(rows,key=itemgetter('date')):
             ^
SyntaxError: invalid syntax




for date,items in groupby(rows,key=itemgetter('date')):
    print(date)\
    for i in items:
        print('  ',i)
  File "<ipython-input-38-043ef2cbeca1>", line 3
    for i in items:
      ^
SyntaxError: invalid syntax




for date,items in groupby(rows,key=itemgetter('date')):
    print(date)
    for i in items:
        print('  ',i) 
        
07/01/2012
   {'address': '5412 CLARK', 'date': '07/01/2012'}
07/01/2016
   {'address': '1412 CLARK', 'date': '07/01/2016'}
07/01/2019
   {'address': '2412 CLARK', 'date': '07/01/2019'}
 from collections import namedtuple

s=namedtuple('S',['A''B'])

s=namedtuple('Sb',['A''B'])

s
Out[49]: __main__.Sb

sb
Traceback (most recent call last):

  File "<ipython-input-50-2e29fd6b6233>", line 1, in <module>
    sb

NameError: name 'sb' is not defined




Sb
Traceback (most recent call last):

  File "<ipython-input-51-09d66f3f1d43>", line 1, in <module>
    Sb

NameError: name 'Sb' is not defined




sub=s('c','d')
Traceback (most recent call last):

  File "<ipython-input-52-b9ab37554950>", line 1, in <module>
    sub=s('c','d')

TypeError: __new__() takes 2 positional arguments but 3 were given




s=namedtuple('s',['A''B'])

sc=s('c','d')
Traceback (most recent call last):

  File "<ipython-input-54-c37c11b9961a>", line 1, in <module>
    sc=s('c','d')

TypeError: __new__() takes 2 positional arguments but 3 were given




sc=('c')

sc
Out[56]: 'c'

sc=s('s')

sc
Out[58]: s(AB='s')

import numpy as np

np.random.randint(10,size=10)
Out[60]: array([7, 7, 3, 7, 3, 5, 0, 2, 4, 4])

a=np.random.randint(10,size=10)

a
Out[62]: array([9, 2, 9, 1, 3, 8, 6, 6, 7, 0])

s=sum(a)

s
Out[64]: 51

s=sum(x**x for x in a)

s
Out[66]: 792535082

   



import os

file=os.listdir('dirname')
Traceback (most recent call last):

  File "<ipython-input-68-ffd0d57c2f8d>", line 1, in <module>
    file=os.listdir('dirname')

FileNotFoundError: [WinError 3] 系统找不到指定的路径。: 'dirname'




file=os.listdir('%dirs')
Traceback (most recent call last):

  File "<ipython-input-69-73428e3e7cb8>", line 1, in <module>
    file=os.listdir('%dirs')

FileNotFoundError: [WinError 3] 系统找不到指定的路径。: '%dirs'




file=os.listdir()

file
Out[71]: 
['.anaconda',
 '.android',
 '.AndroidStudio3.2',
 '.bash_history',
 '.BigNox',
 '.conda',
 '.condarc',
 '.config',
 '.emulator_console_auth_token',
 '.gitconfig',
 '.gradle',
 '.idlerc',
 '.ipython',
 '.LdVirtualBox',
 '.matplotlib',
 '.spyder-py3',
 '.ssh',
 '.VirtualBox',
 'AndroidStudioProjects',
 'AppData',
 'Application Data',
 'Contacts',
 'Cookies',
 'd4ac4633ebd6440fa397b84f1bc94a3c.7z',
 'Favorites',
 'Foxit Reader SDK ActiveX.ini',
 'Hello.java',
 'inittk.ini',
 'inst.ini',
 'IntelGraphicsProfiles',
 'Links',
 'Local Settings',
 'MicrosoftEdgeBackups',
 'Music',
 'My Documents',
 'NetHood',
 'Nox_share',
 'NTUSER.DAT',
 'ntuser.dat.LOG1',
 'ntuser.dat.LOG2',
 'NTUSER.DAT{acf20663-1ba4-11e8-83d4-f894c2bd03de}.TM.blf',
 'NTUSER.DAT{acf20663-1ba4-11e8-83d4-f894c2bd03de}.TMContainer00000000000000000001.regtrans-ms',
 'NTUSER.DAT{acf20663-1ba4-11e8-83d4-f894c2bd03de}.TMContainer00000000000000000002.regtrans-ms',
 'ntuser.ini',
 'ntuser.pol',
 'nuuid.ini',
 'Pictures',
 'pip',
 'PrintHood',
 'python123demo',
 'Recent',
 'Saved Games',
 'scikit_learn_data',
 'Searches',
 'SendTo',
 'skb.kc',
 'source',
 'Templates',
 'UnblockNeteaseMusic-master',
 'untitled0.py',
 'useruid.ini',
 'Videos',
 'VirtualBox VMs',
 'vmlogs',
 '「开始」菜单']

s=('acme'50,,123.45)
  File "<ipython-input-72-d18d344791bb>", line 1
    s=('acme'50,,123.45)
              ^
SyntaxError: invalid syntax




s=('acme',50,123.45)

print(','.join(str(x) for x in s))
acme,50,123.45

a={'x':1'y':2}
  File "<ipython-input-75-f88a488f0b98>", line 1
    a={'x':1'y':2}
              ^
SyntaxError: invalid syntax




a={'x':1,'y':2}

a
Out[77]: {'x': 1, 'y': 2}

b={'y':3,'z':4}

from collections import ChainMap

c=ChainMap(a,b)

c
Out[81]: ChainMap({'x': 1, 'y': 2}, {'y': 3, 'z': 4})

--------第二章--------

re.split(r'[;,\s]\s*',line)
Out[85]: ['kaja', 'kaefj', 'aekl', 'eaklf', 'fff']

filename='scji.py'

filename.endswith('txt')
Out[87]: False

s='{name} is {f}'

s.format(name='fish',f='me')
Out[276]: 'fish is me'

name='i'

f='fish'

s.format_map(vars())
Out[279]: 'i is fish'

class Info:
    def __init__(self,name,f):
        self.name=name
        self.f=f
        

a=info(10,4)
Traceback (most recent call last):

  File "<ipython-input-281-a0dd896fa1fa>", line 1, in <module>
    a=info(10,4)

NameError: name 'info' is not defined




a=Info(10,4)

a
Out[283]: <__main__.Info at 0x2504b8ef248>

s.format_map(vars(a))
Out[284]: '10 is 4'

s.format(name=0)
Traceback (most recent call last):

  File "<ipython-input-285-cffadfed4ad8>", line 1, in <module>
    s.format(name=0)

KeyError: 'f'

textwrap.fill(s,77)
Out[315]: '我是一段很长很长很长的长字符，以至于我得转义换行，接着再换行'

textwrap.fill(s,3)
Out[316]: '我是一\n段很长\n很长很\n长的长\n字符，\n以至于\n我得转\n义换行\n，接着\n再换行'

print(textwrap.fill(s,3))
我是一
段很长
很长很
长的长
字符，
以至于
我得转
义换行
，接着
再换行

print(textwrap.fill(s,10,initial_indent=' '))
 我是一段很长很长很
长的长字符，以至于我
得转义换行，接着再换
行

print(textwrap.fill(s,10))
我是一段很长很长很长
的长字符，以至于我得
转义换行，接着再换行

print(textwrap.fill(s,10,subsequent_indent=' '))
我是一段很长很长很长
 的长字符，以至于我
 得转义换行，接着再
 换行

import os

os.get_terminal_size().columns
Traceback (most recent call last):

  File "<ipython-input-322-863e08fd3df5>", line 1, in <module>
    os.get_terminal_size().columns

OSError: [WinError 6] 句柄无效。




os.get_terminal_size().columns
Traceback (most recent call last):

  File "<ipython-input-323-863e08fd3df5>", line 1, in <module>
    os.get_terminal_size().columns

OSError: [WinError 6] 句柄无效。




s='<html>haha</html>'

import html

html.escape(s)
Out[326]: '&lt;html&gt;haha&lt;/html&gt;'

s.encode('ascii')
Out[327]: b'<html>haha</html>'

text='foo
  File "<ipython-input-328-6550bbabdd60>", line 1
    text='foo
             ^
SyntaxError: EOL while scanning string literal




text='foo=23+42*10'

import re

NAME=r'?P<NAME>[[a-zA-Z_0-9]*)'

NAME=r'?P<NAME>[[a-zA-Z_][a-zA-Z_0-9]*)'

NUM=r'(?P<NUM>\d+)'

PLUS=r'(?P<PLUS>\d+)'

PLUS=r'(?P<PLUS>\+)'

TIMES=r'(？P<TIMES>\*)'

EQ=r'(?P<EQ>=)'

WS=r'(?P<WS>\s+)'

master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))
Traceback (most recent call last):

  File "<ipython-input-339-7165229117c2>", line 1, in <module>
    master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))

  File "d:\Users\16476\Anaconda3\lib\re.py", line 234, in compile
    return _compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))

error: nothing to repeat




NAME=r'?P<NAME>[a-zA-Z_][a-zA-Z_0-9]*)'

master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))
Traceback (most recent call last):

  File "<ipython-input-341-7165229117c2>", line 1, in <module>
    master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))

  File "d:\Users\16476\Anaconda3\lib\re.py", line 234, in compile
    return _compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))

error: nothing to repeat




TIMES=r'(?P<TIMES>\*)'

master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))
Traceback (most recent call last):

  File "<ipython-input-343-7165229117c2>", line 1, in <module>
    master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))

  File "d:\Users\16476\Anaconda3\lib\re.py", line 234, in compile
    return _compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))

error: nothing to repeat




'|'.join([NAME,NUM,PLUS,TIMES,EQ,WS])
Out[344]: '?P<NAME>[a-zA-Z_][a-zA-Z_0-9]*)|(?P<NUM>\\d+)|(?P<PLUS>\\+)|(?P<TIMES>\\*)|(?P<EQ>=)|(?P<WS>\\s+)'

rec='|'.join([NAME,NUM,PLUS,TIMES,EQ,WS])

re=re.compile(rec)
Traceback (most recent call last):

  File "<ipython-input-346-dbe4bd3b4a4d>", line 1, in <module>
    re=re.compile(rec)

  File "d:\Users\16476\Anaconda3\lib\re.py", line 234, in compile
    return _compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\re.py", line 286, in _compile
    p = sre_compile.compile(pattern, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_compile.py", line 764, in compile
    p = sre_parse.parse(p, flags)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 930, in parse
    p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 426, in _parse_sub
    not nested and not items))

  File "d:\Users\16476\Anaconda3\lib\sre_parse.py", line 651, in _parse
    source.tell() - here + len(this))

error: nothing to repeat




NAME = r'(?P<NAME>[a-zA-Z_][a-zA-Z_0-9]*)'
NUM = r'(?P<NUM>\d+)'
PLUS = r'(?P<PLUS>\+)'
TIMES = r'(?P<TIMES>\*)'
EQ = r'(?P<EQ>=)'
WS = r'(?P<WS>\s+)'

master_pat=re.compile('|'.join([NAME,NUM,PLUS,TIMES,EQ,WS]))

rec='|'.join([NAME,NUM,PLUS,TIMES,EQ,WS])

rec
Out[350]: '(?P<NAME>[a-zA-Z_][a-zA-Z_0-9]*)|(?P<NUM>\\d+)|(?P<PLUS>\\+)|(?P<TIMES>\\*)|(?P<EQ>=)|(?P<WS>\\s+)'

scanner=master_pat('foo= 42')
Traceback (most recent call last):

  File "<ipython-input-351-8c5fb04b62db>", line 1, in <module>
    scanner=master_pat('foo= 42')

TypeError: 're.Pattern' object is not callable




scanner=master_pat.scanner('foo= 42')

scanner.match
Out[353]: <function SRE_Scanner.match()>

scanner.match()
Out[354]: <re.Match object; span=(0, 3), match='foo'>

_.lastgroup,_.group()
Out[355]: ('NAME', 'foo')

_.lastgroup,_.group()
Traceback (most recent call last):

  File "<ipython-input-356-41a1219e790e>", line 1, in <module>
    _.lastgroup,_.group()

AttributeError: 'tuple' object has no attribute 'lastgroup'




scanner.match()
Out[357]: <re.Match object; span=(3, 4), match='='>

_.lastgroup,_.group()
Out[358]: ('EQ', '=')

_.lastgroup,_.group()
Traceback (most recent call last):

  File "<ipython-input-359-41a1219e790e>", line 1, in <module>
    _.lastgroup,_.group()

AttributeError: 'tuple' object has no attribute 'lastgroup'




scanner.match()
Out[360]: <re.Match object; span=(4, 5), match=' '>

_.lastgroup,_.group()
Out[361]: ('WS', ' ')

scanner.match()
Out[362]: <re.Match object; span=(5, 7), match='42'>

_.lastgroup,_.group()
Out[363]: ('NUM', '42')

scanner.match()

from collections import  namedtuple

Token=namedtuple('Token',['type','value'])

def generate_tokens(pat,text):
    scanner=pat.scanner(text)
    for m in iter(scanner.match,None):
        yield Token(m.lastgroup,m.group())
        

for tok in generate_tokens(master_pat,'foo= 33+22'):
    print(tok)
    
Token(type='NAME', value='foo')
Token(type='EQ', value='=')
Token(type='WS', value=' ')
Token(type='NUM', value='33')
Token(type='PLUS', value='+')
Token(type='NUM', value='22')

n [89]: 

int('11111111',8)
Out[89]: 2396745

int('11111111',3)
Out[90]: 3280

data=b'\x00\x124v\x00'

len(data)
Out[92]: 5

a=complex(2,4)

b=3-5j

a
Out[95]: (2+4j)

b
Out[96]: (3-5j)

a.real
Out[97]: 2.0

a.imag
Out[98]: 4.0

a.conjugate
Out[99]: <function complex.conjugate>

a.conjugate()
Out[100]: (2-4j)

abs(a)
Out[101]: 4.47213595499958

import cmath

cmath.cos(0)
Out[103]: (1-0j)

cmath.cos(a)
Out[104]: (-11.36423470640106-24.814651485634187j)

cmath.sqrt(-1)
Out[105]: 1j

 a=float('inf')

a
Out[107]: inf

a=float('nan')

a
Out[109]: nan

math.isnan(a)
Out[110]: True

from fractions import Fraction

a=Fraction(5,4)

a
Out[113]: Fraction(5, 4)

b=Fraction(3,2)

print(a+b)
11/4

print(a)
5/4

c=a*b

c
Out[118]: Fraction(15, 8)

c.numerator
Out[119]: 15

c.denominator
Out[120]: 8

float(c)
Out[121]: 1.875

print(c.limit_denominator(8))
15/8

print(c.limit_denominator(7))
13/7

print(c.limit_denominator(2))
2

import numpy as np

x=[1,2,3,4]

y=[5,6,7,8]

x*2
Out[128]: [1, 2, 3, 4, 1, 2, 3, 4]

x+10
Traceback (most recent call last):

  File "<ipython-input-129-e0cbb565319e>", line 1, in <module>
    x+10

TypeError: can only concatenate list (not "int") to list




x+y
Out[130]: [1, 2, 3, 4, 5, 6, 7, 8]

ax=np.arrange(10)
Traceback (most recent call last):

  File "<ipython-input-131-d91542cd4b53>", line 1, in <module>
    ax=np.arrange(10)

AttributeError: module 'numpy' has no attribute 'arrange'




ax=np.array(np.arange(10))

ax
Out[133]: array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])

ax*2
Out[134]: array([ 0,  2,  4,  6,  8, 10, 12, 14, 16, 18])

ax+10
Out[135]: array([10, 11, 12, 13, 14, 15, 16, 17, 18, 19])

ax*ax
Out[136]: array([ 0,  1,  4,  9, 16, 25, 36, 49, 64, 81])

np.sqrt(ax)
Out[137]: 
array([0.        , 1.        , 1.41421356, 1.73205081, 2.        ,
       2.23606798, 2.44948974, 2.64575131, 2.82842712, 3.        ])

np.cos(ax)
Out[138]: 
array([ 1.        ,  0.54030231, -0.41614684, -0.9899925 , -0.65364362,
        0.28366219,  0.96017029,  0.75390225, -0.14550003, -0.91113026])

grid=np.zeros(shape=(10000,10000),dtype=float)

grid
Out[140]: 
array([[0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.],
       [0., 0., 0., ..., 0., 0., 0.]])

grid+=10

grid+=10

grid
Out[143]: 
array([[20., 20., 20., ..., 20., 20., 20.],
       [20., 20., 20., ..., 20., 20., 20.],
       [20., 20., 20., ..., 20., 20., 20.],
       ...,
       [20., 20., 20., ..., 20., 20., 20.],
       [20., 20., 20., ..., 20., 20., 20.],
       [20., 20., 20., ..., 20., 20., 20.]])

a=np.array(np.arange(1,13)).reshape(3,4)

a
Out[145]: 
array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12]])

a[1:3,1:3]
Out[146]: 
array([[ 6,  7],
       [10, 11]])

a[1:3,1:3]+=10

a[1:3,1:3]
Out[148]: 
array([[16, 17],
       [20, 21]])

a
Out[149]: 
array([[ 1,  2,  3,  4],
       [ 5, 16, 17,  8],
       [ 9, 20, 21, 12]])

a[:,:]
Out[150]: 
array([[ 1,  2,  3,  4],
       [ 5, 16, 17,  8],
       [ 9, 20, 21, 12]])

a+[1,1,1,1]
Out[151]: 
array([[ 2,  3,  4,  5],
       [ 6, 17, 18,  9],
       [10, 21, 22, 13]])

a
Out[152]: 
array([[ 1,  2,  3,  4],
       [ 5, 16, 17,  8],
       [ 9, 20, 21, 12]])

a[:,:]+[1,1,1,1]
Out[153]: 
array([[ 2,  3,  4,  5],
       [ 6, 17, 18,  9],
       [10, 21, 22, 13]])

a
Out[154]: 
array([[ 1,  2,  3,  4],
       [ 5, 16, 17,  8],
       [ 9, 20, 21, 12]])

np.where(a<10,a,10)
Out[155]: 
array([[ 1,  2,  3,  4],
       [ 5, 10, 10,  8],
       [ 9, 10, 10, 10]])

  a
Out[156]: 
array([[ 1,  2,  3,  4],
       [ 5, 16, 17,  8],
       [ 9, 20, 21, 12]])

a=np.matrix(np.arange(1,13)).reshape(3,4)

a
Out[158]: 
matrix([[ 1,  2,  3,  4],
        [ 5,  6,  7,  8],
        [ 9, 10, 11, 12]])

m.T
Traceback (most recent call last):

  File "<ipython-input-159-a4ee52bc5d60>", line 1, in <module>
    m.T

NameError: name 'm' is not defined




a.T
Out[160]: 
matrix([[ 1,  5,  9],
        [ 2,  6, 10],
        [ 3,  7, 11],
        [ 4,  8, 12]])

a=np.matrix(np.arange(9)).reshape(3,3)

a
Out[162]: 
matrix([[0, 1, 2],
        [3, 4, 5],
        [6, 7, 8]])

a.I
Traceback (most recent call last):

  File "<ipython-input-163-105ed6093821>", line 1, in <module>
    a.I

  File "d:\Users\16476\Anaconda3\lib\site-packages\numpy\matrixlib\defmatrix.py", line 836, in getI
    return asmatrix(func(self))

  File "d:\Users\16476\Anaconda3\lib\site-packages\numpy\linalg\linalg.py", line 551, in inv
    ainv = _umath_linalg.inv(a, signature=signature, extobj=extobj)

  File "d:\Users\16476\Anaconda3\lib\site-packages\numpy\linalg\linalg.py", line 97, in _raise_linalgerror_singular
    raise LinAlgError("Singular matrix")

LinAlgError: Singular matrix




import numpy.linalg

numpy.linalg(a)
Traceback (most recent call last):

  File "<ipython-input-165-9601a69546e8>", line 1, in <module>
    numpy.linalg(a)

TypeError: 'module' object is not callable




numpy.linalg.det(a)
Out[166]: 0.0

numpy.linalg.eigvals(a)
Out[167]: array([ 1.33484692e+01, -1.34846923e+00, -1.15433316e-15])

import random

values=[1,2,3,4,5,6]

random.choice(values)
Out[170]: 2

random.choice(values)
Out[171]: 3

random.choice(values)
Out[172]: 3

random.choice(values)
Out[173]: 3

random.choice(values)
Out[174]: 2

random.choice(values)
Out[175]: 5

random.choice(values)
Out[176]: 2

random.choice(values)
Out[177]: 2

random.choice(values)
Out[178]: 5

random.choice(values)
Out[179]: 4

random.choice(values)
Out[180]: 2

random.choice(values)
Out[181]: 4

random.choice(values)
Out[182]: 5

random.choice(values)
Out[183]: 3

random.sample(values,2)
Out[184]: [6, 3]

random.shuffle(values,2)
Traceback (most recent call last):

  File "<ipython-input-185-1a532af8aeaa>", line 1, in <module>
    random.shuffle(values,2)

  File "d:\Users\16476\Anaconda3\lib\random.py", line 283, in shuffle
    j = _int(random() * (i+1))

TypeError: 'int' object is not callable




random.shuffle(values)

values
Out[187]: [5, 2, 6, 3, 1, 4]

random.randint(0,10)
Out[188]: 6

random.random(0,10)
Traceback (most recent call last):

  File "<ipython-input-189-d9ae151f77b7>", line 1, in <module>
    random.random(0,10)

TypeError: random() takes no arguments (2 given)




random.random()
Out[190]: 0.6787107338169545

random.getrandbits(2000)
Out[191]: 65064673577462835504122282079660576594584419506899091788879677305280447902739267176533338223406614483375724583086323647313660147418354706259315053466722062632421622873896693904035890205804801219262045070556715230353206040310919468925808892670344130954534286249297865469608698320589020235321907041253897636683552140955606853337747512195408746365611044743438205068018181825331309490816663684575744825684887342402724444262668653467804513719254077427159866206972908528214615747741613962882593558690462324194350199580522038880600791169505801825575559991989257183402554722439946805894867966082558466684855757

from datetime import timedelta

a=timedelta(days=2,hours=6)

a
Out[194]: datetime.timedelta(days=2, seconds=21600)

b=timedelta(hours=4.5)

c=a+b

c
Out[197]: datetime.timedelta(days=2, seconds=37800)

c.total_seconds()
Out[198]: 210600.0

c.total_seconds()/3600
Out[199]: 58.5

from datetime import datetime

a=datetime(2019,11,26)

print(a+timedelta(day=10))
Traceback (most recent call last):

  File "<ipython-input-202-6ddf1aaad315>", line 1, in <module>
    print(a+timedelta(day=10))

TypeError: 'day' is an invalid keyword argument for __new__()




print(a+timedelta(days=10))
2019-12-06 00:00:00

d=a+timedelta(days=10)

d
Out[205]: datetime.datetime(2019, 12, 6, 0, 0)

d.days
Traceback (most recent call last):

  File "<ipython-input-206-5d3d40811b44>", line 1, in <module>
    d.days

AttributeError: 'datetime.datetime' object has no attribute 'days'




datetime.today()
Out[207]: datetime.datetime(2019, 11, 27, 17, 17, 41, 303856)

from dateutil.relativedelta import relativedelta

a
Out[209]: datetime.datetime(2019, 11, 26, 0, 0)

a+relativedelta(months=+4)
Out[210]: datetime.datetime(2020, 3, 26, 0, 0)

a+relativedelta(months=-4)
Out[211]: datetime.datetime(2019, 7, 26, 0, 0)

b
Out[212]: datetime.timedelta(seconds=16200)

b=datetime(2019,1,22)

d=b-a

d
Out[215]: datetime.timedelta(days=-308)

relativedelta(a,b)
Out[216]: relativedelta(months=+10, days=+4)



def frange(start ,stop,increment):
    x=start
    while x<=stop:
        yield x
        x+=increment
        

frange(1,5,2)
Out[31]: <generator object frange at 0x0000026946AB9CC8>

for i in frange(1,5,2):
    print（ｉ）
  File "<ipython-input-32-422bb8d5ab81>", line 2
    print（ｉ）
           ^
SyntaxError: invalid character in identifier




for i in frange(1,5,2):
    print(i)
    
1
3
5

a=frange(1,5,2)

sum(a)
Out[35]: 9

list(a)
Out[36]: []

print(list(a))
[]

list(frange(0,1,0.125))

Out[38]: [0, 0.125, 0.25, 0.375, 0.5, 0.625, 0.75, 0.875, 1.0]

list(frange(1,5,2))
Out[39]: [1, 3, 5]

a
Out[40]: <generator object frange at 0x00000269469D25C8>

list(a)
Out[41]: []

a==frange(1,5,2)
Out[42]: False

b=frange(1,5,2)

a==b
Out[44]: False

sum(b)
Out[45]: 9

frange(1,5,2)
Out[46]: <generator object frange at 0x00000269469D28C8>

b
Out[47]: <generator object frange at 0x00000269469D2648>

#树节点，深度优先

runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')
Traceback (most recent call last):

  File "<ipython-input-49-5fcc9abdec61>", line 1, in <module>
    runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 827, in runfile
    execfile(filename, namespace)

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 110, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "C:/Users/16476/untitled1.py", line 22, in <module>
    root =Node(0)

TypeError: Node() takes no arguments




runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

class Node:
    def __init__(self,value):
        self._value=value
        self._children=[]
    def __repr__(self):
        return 'Node{(!r)}'.format(self.__value)
    def add_child(self,node):
        self._children.append(node)
    def __inter__(self):
        return iter(self._children)
    def depth_first(self):
        yield self
        for c in self:
            yield from c.depth_first()
if __name__=='__main__':
    root =Node(0)
    child1=Node(1)
    child2=Node(2)
    root.add_child(child1)
    root.add_child(child2)
    child1.add_child(Node(4))
    child1.add_child(Node(5))
    child2.add_child(Node(3))
    child2.add_child(Node(00000))
    

for ch in root.depth_first():
    print(ch)
    
Traceback (most recent call last):

  File "<ipython-input-52-1300f4843ba9>", line 2, in <module>
    print(ch)

  File "<ipython-input-51-ba451f45aebf>", line 6, in __repr__
    return 'Node{(!r)}'.format(self.__value)

AttributeError: 'Node' object has no attribute '_Node__value'




runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')
Traceback (most recent call last):

  File "D:\Users\16476\Anaconda3\lib\site-packages\IPython\core\interactiveshell.py", line 3326, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)

  File "<ipython-input-54-5fcc9abdec61>", line 1, in <module>
    runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 827, in runfile
    execfile(filename, namespace)

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 110, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "C:/Users/16476/untitled1.py", line 32
    print(ch)
        ^
IndentationError: expected an indented block




runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')
Traceback (most recent call last):

  File "<ipython-input-55-5fcc9abdec61>", line 1, in <module>
    runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 827, in runfile
    execfile(filename, namespace)

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 110, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "C:/Users/16476/untitled1.py", line 32, in <module>
    print(ch)

  File "C:/Users/16476/untitled1.py", line 12, in __repr__
    return 'Node{(!r)}'.format(self._value)

ValueError: expected ':' after conversion specifier




class Node:
    def __init__(self,value):
        self._value=value
        self._children=[]
    def __repr__(self):
        return 'Node{(!r)}'.format(self._value)
    def add_child(self,node):
        self._children.append(node)
    def __inter__(self):
        return iter(self._children)
    def depth_first(self):
        yield self
        for c in self:
            yield from c.depth_first()
if __name__=='__main__':
    root =Node(0)
    child1=Node(1)
    child2=Node(2)
    root.add_child(child1)
    root.add_child(child2)
    child1.add_child(Node(4))
    child1.add_child(Node(5))
    child2.add_child(Node(3))
    child2.add_child(Node(00000))
    

for ch in root.depth_first():
        print(ch)
        
Traceback (most recent call last):

  File "<ipython-input-57-bab6c61fe318>", line 2, in <module>
    print(ch)

  File "<ipython-input-56-205a7d19b7ad>", line 6, in __repr__
    return 'Node{(!r)}'.format(self._value)

ValueError: expected ':' after conversion specifier




runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')
Node(0)
Traceback (most recent call last):

  File "<ipython-input-58-5fcc9abdec61>", line 1, in <module>
    runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 827, in runfile
    execfile(filename, namespace)

  File "D:\Users\16476\Anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py", line 110, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "C:/Users/16476/untitled1.py", line 31, in <module>
    for ch in root.depth_first():

  File "C:/Users/16476/untitled1.py", line 19, in depth_first
    for c in self:

TypeError: 'Node' object is not iterable




runfile('C:/Users/16476/untitled1.py', wdir='C:/Users/16476')
Node(0)
Node(1)
Node(4)
Node(5)
Node(2)
Node(3)
Node(0)

class Node:
    def __init__(self,value):
        self._value=value
        self._children=[]
    def __repr__(self):
        return 'Node({!r})'.format(self._value)
    def add_child(self,node):
        self._children.append(node)
    def __iter__(self):
        return iter(self._children)
    def depth_first(self):
        yield self
        for c in self:
            yield from c.depth_first()
if __name__=='__main__':
    root =Node(0)
    child1=Node(1)
    child2=Node(2)
    root.add_child(child1)
    root.add_child(child2)
    child1.add_child(Node(4))
    child1.add_child(Node(5))
    child2.add_child(Node(3))
    child2.add_child(Node(00000))
    for ch in root.depth_first():
        print(ch)
        
Node(0)
Node(1)
Node(4)
Node(5)
Node(2)
Node(3)
Node(0)

next(root)
Traceback (most recent call last):

  File "<ipython-input-61-49ee399c1ae1>", line 1, in <module>
    next(root)

TypeError: 'Node' object is not an iterator




next(root.depth_first())
Out[62]: Node(0)

next(root.depth_first())
Out[63]: Node(0)

next(iter(root))
Out[64]: Node(1)

next(iter(root))
Out[65]: Node(1)



next(iter(root))
Out[66]: Node(1)

root
Out[67]: Node(0)

for ch in root:
    print(ch)
    
Node(1)
Node(2)

a=[1,2,3,4]

for x in reversed( a):
    print(a)
    
[1, 2, 3, 4]
[1, 2, 3, 4]
[1, 2, 3, 4]
[1, 2, 3, 4]

for x in reversed( a):
    print(x)
    
4
3
2
1

f=open(ck.txt)
Traceback (most recent call last):

  File "<ipython-input-72-df7120787cfa>", line 1, in <module>
    f=open(ck.txt)

NameError: name 'ck' is not defined




f=open('ck.txt')
Traceback (most recent call last):

  File "<ipython-input-73-c38b2b982978>", line 1, in <module>
    f=open('ck.txt')

FileNotFoundError: [Errno 2] No such file or directory: 'ck.txt'




f=open('ck.txt')

for line in reversed(list(f)):
    print (line)
    
'''

Out[7]: Counter({1: 3, 2: 2, 3: 1})

wc



wc.update()



Out[5]: [(1, 3), (2, 2)]

a



a=wc.most_common(2)



wc=Counter(w)



from collections import Counter

'''

w=[1,1,1,2,2,3]

a[s]

s=slice(2,4)

list(dedupe(a))

a=np.random.randint(10,size=10)

            seen.add(item)

            yield item 

        if item not in seen:

    for item in items:

    seen = set()

def dedupe(items):

import numpy as np

"""

@author: 16476



Created on Sun Nov 17 11:16:49 2019

"""

# -*- coding: utf-8 -*-


runfile('C:/Users/16476/untitled1.py')

for line in Countdown(f):
    print (line)
    
Traceback (most recent call last):

  File "<ipython-input-77-8f5d9ab26165>", line 1, in <module>
    for line in Countdown(f):

  File "C:/Users/16476/untitled1.py", line 6, in __iter__
    while n>0:

TypeError: '>' not supported between instances of '_io.TextIOWrapper' and 'int'




for line in Countdown(f).__reversed__:
    print (line)
    
Traceback (most recent call last):

  File "<ipython-input-78-a68512b546e3>", line 1, in <module>
    for line in Countdown(f).__reversed__:

TypeError: 'method' object is not iterable




a=Countdown(f)

a
Out[80]: <__main__.Countdown at 0x26946a74a88>

a.start
Out[81]: <_io.TextIOWrapper name='ck.txt' mode='r' encoding='cp936'>

reversed(a)
Out[82]: <generator object Countdown.__reversed__ at 0x0000026946A76F48>

for line in reversed(a):
    print (line)
    
Traceback (most recent call last):

  File "<ipython-input-83-f7f5b705532b>", line 1, in <module>
    for line in reversed(a):

  File "C:/Users/16476/untitled1.py", line 11, in __reversed__
    while n<=self.start:

TypeError: '<=' not supported between instances of 'int' and '_io.TextIOWrapper'
 with open('ck.txt') as f:
    for line in f:
       print(line)
      
# -*- coding: utf-8 -*-

"""

Created on Sun Nov 17 11:16:49 2019



@author: 16476

"""

import numpy as np

def dedupe(items):

    seen = set()

    for item in items:

        if item not in seen:

            yield item 

            seen.add(item)

a=np.random.randint(10,size=10)

list(dedupe(a))

s=slice(2,4)

a[s]

w=[1,1,1,2,2,3]

'''

from collections import Counter



wc=Counter(w)



a=wc.most_common(2)



a

Out[5]: [(1, 3), (2, 2)]



wc.update()



wc

Out[7]: Counter({1: 3, 2: 2, 3: 1})

'''


from itertools import dorpwhile
Traceback (most recent call last):

  File "<ipython-input-88-c300f0cd14f0>", line 1, in <module>
    from itertools import dorpwhile

ImportError: cannot import name 'dorpwhile' from 'itertools' (unknown location)




from itertools import dropwhile

 with open('ck.txt') as f:
    for line in dropwhile(lambda line:line.startswith('#')):
       print(line,end='')
      
Traceback (most recent call last):

  File "<ipython-input-90-4a638b85efa7>", line 2, in <module>
    for line in dropwhile(lambda line:line.startswith('#')):

TypeError: dropwhile expected 2 arguments, got 1




 with open('ck.txt') as f:
    for line in dropwhile(lambda line:line.startswith('#'),f):
       print(line,end='')
      
"""
Created on Sun Nov 17 11:16:49 2019

@author: 16476
"""
import numpy as np
def dedupe(items):
    seen = set()
    for item in items:
        if item not in seen:
            yield item 
            seen.add(item)
a=np.random.randint(10,size=10)
list(dedupe(a))
s=slice(2,4)
a[s]
w=[1,1,1,2,2,3]
'''
from collections import Counter

wc=Counter(w)

a=wc.most_common(2)

a
Out[5]: [(1, 3), (2, 2)]

wc.update()

wc
Out[7]: Counter({1: 3, 2: 2, 3: 1})
'''

 with open('ck.txt') as f:
    for line in dropwhile(lambda line3:line3.startswith('#'),f):
       print(line,end='')
      
"""
Created on Sun Nov 17 11:16:49 2019

@author: 16476
"""
import numpy as np
def dedupe(items):
    seen = set()
    for item in items:
        if item not in seen:
            yield item 
            seen.add(item)
a=np.random.randint(10,size=10)
list(dedupe(a))
s=slice(2,4)
a[s]
w=[1,1,1,2,2,3]
'''
from collections import Counter

wc=Counter(w)

a=wc.most_common(2)

a
Out[5]: [(1, 3), (2, 2)]

wc.update()

wc
Out[7]: Counter({1: 3, 2: 2, 3: 1})
'''

from itertools import islice

items=[1,2,3,4]

for x in islice(ltems,3,None):
    print(x)
    
Traceback (most recent call last):

  File "<ipython-input-95-d7112a70a0d7>", line 1, in <module>
    for x in islice(ltems,3,None):

NameError: name 'ltems' is not defined




for x in islice(items,3,None):
    print(x)
    
4

for x in islice(items,3):
    print(x)
    
1
2
3

a=['a','b','c']

from itertools import permutations

for p in permutations(item):
    print(p)
    
Traceback (most recent call last):

  File "<ipython-input-100-d92574373e18>", line 1, in <module>
    for p in permutations(item):

NameError: name 'item' is not defined




for p in permutations(a):
    print(p)
    
('a', 'b', 'c')
('a', 'c', 'b')
('b', 'a', 'c')
('b', 'c', 'a')
('c', 'a', 'b')
('c', 'b', 'a')

for p in permutations(a,2):
    print(p)
    
('a', 'b')
('a', 'c')
('b', 'a')
('b', 'c')
('c', 'a')
('c', 'b')

for p in permutations(a,1):
    print(p)
    
('a',)
('b',)
('c',)

from itertools import combinations

for p in combinations(a,2):
    print(p)
    
('a', 'b')
('a', 'c')
('b', 'c')

for p in combinations_with_replacement(a,2):
    print(p)
    
Traceback (most recent call last):

  File "<ipython-input-106-66eca9dba37d>", line 1, in <module>
    for p in combinations_with_replacement(a,2):

NameError: name 'combinations_with_replacement' is not defined




from itertools import combinations_with_replacement

for p in combinations_with_replacement(a,2):
    print(p)
    
('a', 'a')
('a', 'b')
('a', 'c')
('b', 'b')
('b', 'c')
('c', 'c')



my_llist=['a','b','c']

for idx,val in enumerate(my_llist)
  File "<ipython-input-110-ddcd1c5bdfa4>", line 1
    for idx,val in enumerate(my_llist)
                                      ^
SyntaxError: invalid syntax




for idx,val in enumerate(my_llist):
    print(isx,val)
    
Traceback (most recent call last):

  File "<ipython-input-111-42f4cb4f417d>", line 2, in <module>
    print(isx,val)

NameError: name 'isx' is not defined




for idx,val in enumerate(my_llist):
    print(idx,val)
    
0 a
1 b
2 c

for idx,val in enumerate(my_llist,1):
    print(idx,val)
    
1 a
2 b
3 c

 with open('ck.txt') as f:
    for k,line in enumerate( dropwhile(lambda line3:line3.startswith('#'),f),1):
       print(k,line,end='')
      
1 """
2 Created on Sun Nov 17 11:16:49 2019
3 
4 @author: 16476
5 """
6 import numpy as np
7 def dedupe(items):
8     seen = set()
9     for item in items:
10         if item not in seen:
11             yield item 
12             seen.add(item)
13 a=np.random.randint(10,size=10)
14 list(dedupe(a))
15 s=slice(2,4)
16 a[s]
17 w=[1,1,1,2,2,3]
18 '''
19 from collections import Counter
20 
21 wc=Counter(w)
22 
23 a=wc.most_common(2)
24 
25 a
26 Out[5]: [(1, 3), (2, 2)]
27 
28 wc.update()
29 
30 wc
31 Out[7]: Counter({1: 3, 2: 2, 3: 1})
32 '''

x=[1,2,3,4,5]

y='victo'

for i,j in zip(x,y):
    print(i,j)
    
1 v
2 i
3 c
4 t
5 o

for i in zip(x,y):
    print(i)
    
(1, 'v')
(2, 'i')
(3, 'c')
(4, 't')
(5, 'o')

from itertools import zip_longest

for i in zip_longest('viictory','paction'):
    print(i)
    
('v', 'p')
('i', 'a')
('i', 'c')
('c', 't')
('t', 'i')
('o', 'o')
('r', 'n')
('y', None)

for i in zip_longest('viictory','paction',fillvalue='sss'):
    print(i)
    


    
('v', 'p')
('i', 'a')
('i', 'c')
('c', 't')
('t', 'i')
('o', 'o')
('r', 'n')
('y', 'sss')

from itertools import chain

a=[1,23,4,5]

b=['x','y','z']

for x in chaiin(a,b):
    print(x)
    
Traceback (most recent call last):

  File "<ipython-input-125-59f158445bf6>", line 1, in <module>
    for x in chaiin(a,b):

NameError: name 'chaiin' is not defined




for x in chain(a,b):
    print(x)
    
1
23
4
5
x
y
z

from collections import Iterable
__main__:1: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working

Iterable
Out[128]: collections.abc.Iterable

import heapq

a=[1,2,5,0]

b=[3,4,8,4]

for c in heapq.merge(a,b):
    print(c)
    
1
2
3
4
5
0
8
4

a=[1,2,3,4]

a=[1,4,7]


a[100]
Out[29]: 17

a[0:10]
Out[30]: b'\xff\xd8\xff\xe0\x00\x10JFIF'

str(a[0:10])
Out[31]: "b'\\xff\\xd8\\xff\\xe0\\x00\\x10JFIF'"

str(a[0:10],encoding='utf-8')
Traceback (most recent call last):

  File "<ipython-input-32-6eb697bc14a7>", line 1, in <module>
    str(a[0:10],encoding='utf-8')

UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte




a[0:10].decode(a)
Traceback (most recent call last):

  File "<ipython-input-33-dff5f3b36dff>", line 1, in <module>
    a[0:10].decode(a)

TypeError: decode() argument 1 must be str, not bytes




a[0:10].decode(s)
Traceback (most recent call last):

  File "<ipython-input-34-ed902a8e40dd>", line 1, in <module>
    a[0:10].decode(s)

NameError: name 's' is not defined




s=''

a[0:10].decode(s)
Traceback (most recent call last):

  File "<ipython-input-36-ed902a8e40dd>", line 1, in <module>
    a[0:10].decode(s)

LookupError: unknown encoding: 




a.decode('utf-8')
Traceback (most recent call last):

  File "<ipython-input-37-fe89aebaa52b>", line 1, in <module>
    a.decode('utf-8')

UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte




with open('io.py','xt') as f:
    f.write('hh\n')
    
Traceback (most recent call last):

  File "<ipython-input-38-404dec0738c8>", line 1, in <module>
    with open('io.py','xt') as f:

FileExistsError: [Errno 17] File exists: 'io.py'




import os

os.path
Out[40]: <module 'ntpath' from 'D:\\Users\\16476\\Anaconda3\\lib\\ntpath.py'>

os.path.exists('io.py')
Out[41]: True

s=io.StringIO()
Traceback (most recent call last):

  File "<ipython-input-42-783f615e6061>", line 1, in <module>
    s=io.StringIO()

NameError: name 'io' is not defined




import io

s=io.StringIO()

s
Out[45]: <_io.StringIO at 0x110a2d3c1f8>

s.write('Hh\n')
Out[46]: 3

s.getvalue()
Out[47]: 'Hh\n'

s.read()
Out[48]: ''

s
Out[49]: <_io.StringIO at 0x110a2d3c1f8>

s.close()

s
Out[51]: <_io.StringIO at 0x110a2d3c1f8>

s.read(2)
Traceback (most recent call last):

  File "<ipython-input-52-f002bed45c01>", line 1, in <module>
    s.read(2)

ValueError: I/O operation on closed file




open(s)
Traceback (most recent call last):

  File "<ipython-input-53-b99e7aca8437>", line 1, in <module>
    open(s)

TypeError: expected str, bytes or os.PathLike object, not _io.StringIO




import gzip

with gzip.open('io.zip','rt') as f:
    f.read(10)
    
Traceback (most recent call last):

  File "<ipython-input-55-cce4a8264925>", line 2, in <module>
    f.read(10)

  File "D:\Users\16476\Anaconda3\lib\gzip.py", line 289, in read1
    return self._buffer.read1(size)

  File "D:\Users\16476\Anaconda3\lib\_compression.py", line 68, in readinto
    data = self.read(len(byte_view))

  File "D:\Users\16476\Anaconda3\lib\gzip.py", line 463, in read
    if not self._read_gzip_header():

  File "D:\Users\16476\Anaconda3\lib\gzip.py", line 411, in _read_gzip_header
    raise OSError('Not a gzipped file (%r)' % magic)

OSError: Not a gzipped file (b'PK')

a


import os.path

path ='a/b/c/d.c'

os.path.basename(path)
Out[58]: 'd.c'

os.path.dirname(path)
Out[59]: 'a/b/c'

os.patn.join('a','a')
Traceback (most recent call last):

  File "<ipython-input-60-c4776266d73c>", line 1, in <module>
    os.patn.join('a','a')

AttributeError: module 'os' has no attribute 'patn'




os.patn.join('a','b',os.path.basename(path))
Traceback (most recent call last):

  File "<ipython-input-61-7fbe986c2208>", line 1, in <module>
    os.patn.join('a','b',os.path.basename(path))

AttributeError: module 'os' has no attribute 'patn'




os.path.join('a','b')
Out[62]: 'a\\b'

os.path.expanduser('python\\io.7z')
Out[63]: 'python\\io.7z'

os.path.expanduser('~\\python\\io.7z')
Out[64]: 'C:\\Users\\16476\\python\\io.7z'

os.path.exists('ck_log.txt')
Out[65]: True

os.path.exists('python')
Out[66]: False

os.path.exists('.git')
Out[67]: True

os.path.isfile('.git')
Out[68]: False

os.path.isdir('.git')
Out[69]: True

os.path.islink('.git')
Out[70]: False

os.path.islink('python/.git')
Out[71]: False

os.path.islink('/python/.git')
Out[72]: False

os.path.getsize('/python/.git')
Out[73]: 4096

os.path.gettime('/python/.git')
Traceback (most recent call last):

  File "<ipython-input-74-54c025de4a96>", line 1, in <module>
    os.path.gettime('/python/.git')

AttributeError: module 'ntpath' has no attribute 'gettime'




os.path.getmtime('/python/.git')
Out[75]: 1575169406.0499172

import time

time.ctime(os.path.getmtime('/python/.git'))
Out[77]: 'Sun Dec  1 11:03:26 2019'

time.ctime(os.path.getmtime('/python/.git')).split(' ')
Out[78]: ['Sun', 'Dec', '', '1', '11:03:26', '2019']

name=os.listdir()

name
Out[80]: 
['.git',
 '1.png',
 '4.jpg',
 'ck.txt',
 'ck_log.txt',
 'io.7z',
 'io.py',
 'io.zip',
 'jalapexflo.txt',
 'plot',
 'readme.txt',
 'test',
 'untitled0.py',
 'untitled1.py',
 '图片分层.py',
 '降维.py',
 '降维2py.py']

name=(n for n in os.listdir() if os.path.isfile(name))

name
Out[82]: <generator object <genexpr> at 0x00000110A22CB148>

next(nanme)
Traceback (most recent call last):

  File "<ipython-input-83-1f87d72c9366>", line 1, in <module>
    next(nanme)

NameError: name 'nanme' is not defined




next(name)
Traceback (most recent call last):

  File "<ipython-input-84-2f689c2ef075>", line 1, in <module>
    next(name)

  File "<ipython-input-81-8e8c3afbaa00>", line 1, in <genexpr>
    name=(n for n in os.listdir() if os.path.isfile(name))

  File "D:\Users\16476\Anaconda3\lib\genericpath.py", line 30, in isfile
    st = os.stat(path)

TypeError: stat: path should be string, bytes, os.PathLike or integer, not generator




for i in name:
    print(i)
    

name=[n for n in os.listdir() if os.path.isfile(name)]
Traceback (most recent call last):

  File "<ipython-input-86-3714c520d617>", line 1, in <module>
    name=[n for n in os.listdir() if os.path.isfile(name)]

  File "<ipython-input-86-3714c520d617>", line 1, in <listcomp>
    name=[n for n in os.listdir() if os.path.isfile(name)]

  File "D:\Users\16476\Anaconda3\lib\genericpath.py", line 30, in isfile
    st = os.stat(path)

TypeError: stat: path should be string, bytes, os.PathLike or integer, not generator




name=[n for n in os.listdir() if os.path.isfile(n)]

n
Traceback (most recent call last):

  File "<ipython-input-88-ab0680a89434>", line 1, in <module>
    n

NameError: name 'n' is not defined




name
Out[89]: 
['1.png',
 '4.jpg',
 'ck.txt',
 'ck_log.txt',
 'io.7z',
 'io.py',
 'io.zip',
 'jalapexflo.txt',
 'readme.txt',
 'untitled0.py',
 'untitled1.py',
 '图片分层.py',
 '降维.py',
 '降维2py.py']

name=(n for n in os.listdir() if os.path.isfile(n))

name
Out[91]: <generator object <genexpr> at 0x00000110A2ECF848>

for i in name:
    
    print(i)
    
1.png
4.jpg
ck.txt
ck_log.txt
io.7z
io.py
io.zip
jalapexflo.txt
readme.txt
untitled0.py
untitled1.py
图片分层.py
降维.py
降维2py.py

import glob 

py=glob.glob('*.py')

py
Out[95]: ['io.py', 'untitled0.py', 'untitled1.py', '图片分层.py', '降维.py', '降维2py.py']

from fnmatch import fnmatch

pyfiles=[p for p in os.path.listdir() if fnmatch(p,'*.py')]
Traceback (most recent call last):

  File "<ipython-input-97-71dfda50dc9a>", line 1, in <module>
    pyfiles=[p for p in os.path.listdir() if fnmatch(p,'*.py')]

AttributeError: module 'ntpath' has no attribute 'listdir'




pyfiles=[p for p in os.listdir() if fnmatch(p,'*.py')]

pyfiles
Out[99]: ['io.py', 'untitled0.py', 'untitled1.py', '图片分层.py', '降维.py', '降维2py.py']

import os .path

namel=[(name,os.path.

with open('io.py') as f:
    for i,j in enumerate(f,1):
        print(i,j)
        
f=open('io.py','r')
f.read()
f=open('io.py','w')
f.write('hh')
f.close()
f=open('io.py','w')
f.read()
f=open('io.py','r+')
f.write('hh')
f.close()
z=open('io.py','r+')
z.write('hh')
f.close()
z=open('io.py','r+')
z.write('hhf')
f.close()
z=open('io.py','r+')
z.write('hhf')
z.read()
z.close()
z=open('io.py','r+')
z.write('hhf')
z.read()
z.close()
z=open('io.py','a+')
z.read()
z.write('hhf1')
z.close()
z=open('io.py','a+')
print(z.read())
z.close()
z=open('io.py','r+')
print(z.read())
z.write('hhf12')
z.close()
z=open('io.py','r+')
z.write('hhf12')
z.read()
z.write('hhf12333333333')
z.read()
z.close()
z=open('io.py','a+')
z.write('hhf12333333333999999')
z.close()
with open('io.py') as f:
    a=f.readlines()
    
a
with open('io.py') as f:
    
    a=f.readlines()
    
a
a=open('1.txt','w')
a=open('1.txt','a')
a=open('1.txt5','a')
a=open('1.txt5','x')
a=open('1.txt56','x')
a.close()
import json
def main():
    mydict = {
        'name': '骆昊',
        'age': 38,
        'qq': 957658,
        'friends': ['王大锤', '白元芳'],
        'cars': [
            {'brand': 'BYD', 'max_speed': 180},
            {'brand': 'Audi', 'max_speed': 280},
            {'brand': 'Benz', 'max_speed': 320}
        ]
    }
    try:
        with open('data.json', 'w') as fs:
            json.dump(mydict, fs)
    except IOError as e:
        print(e)
    print('保存数据完成!')
    
main()
with open ('data.json','r',encoding='utf-8') as f:
    print(f.read())
    
def main():
    mydict = {
        'name': '骆昊',
        'age': 38,
        'qq': 957658,
        'friends': ['王大锤', '白元芳'],
        'cars': [
            {'brand': 'BYD', 'max_speed': 180},
            {'brand': 'Audi', 'max_speed': 280},
            {'brand': 'Benz', 'max_speed': 320}
        ]
    }
    try:
        with open('data.json', 'w', encoding='utf-8') as fs:
            json.dump(mydict, fs)
    except IOError as e:
        print(e)
    print('保存数据完成!')
    
with open('data.json', 'r+', encoding='utf-8') as fs:
    fs.write('start')
    
with open('data.json', 'r+', encoding='utf-8') as fs:
    fs.read()
    fs.write('start')
    
dict{'a':1}
d={'a':1}
with open ('j.txt','w') as f:
    json.dump(d,f)
    
with open ('j.txt','w') as f:
    a=json.load(d,f)
    
with open ('j.txt','w') as f:
    a=json.load(f)
    
with open ('j.txt','r') as f:
    a=json.load(f)
    
with open ('j.txt','r+') as f:
    a=json.load(f)
    
with open ('j.txt','r+') as f:
    a=json.load(f,strict=False)
    
with open ('j.txt','w') as f:
    json.dump(d,f)
    
with open ('j.txt','r') as f:
    a=json.load(f,strict=False)
    
a
with open ('j.txt','r') as f:
    a=json.load(f)
    
a
type(a)
json.jumps(a)
json.dumps(a)
with open ('j.txt','r') as f:
    print(f.read(100))
    
with open ('j.txt','r') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='utf-8') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='unicode') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='Unicode') as f:
    print(f.read())
    
with open ('j.txt','r') as f:
    print(f.read())
    
with open ('j.txt','r') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='Unicode') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='utf-8') as f:
    print(f.read())
    
with open ('j.txt','r') as f:
    print(f.read())
    
with open ('j.txt','r',encoding='utf-8') as f:
    a=json.load(f)
    
with open ('j.txt','r',encoding='utf-8-sig') as f:
    a=json.load(f)
    
a['id']
a
a['data']
a['data':'list']
a['data']['list']
type(a['data']['list'])
dict(a['data']['list'])
a['data']['list'][0]
a['data']['list'][0]['id']
with open ('k.txt','r',encoding='utf-8-sig') as f:
    a=json.load(f)
    
with open ('k.txt','r',encoding='utf-8-sig') as f:
    
    a=json.load(f)
    
a['data']
with open ('k.txt','r',encoding='utf-8-sig') as f:
    
    a=json.load(f)
    
a['data']
a['data']['remark']
a['data']['remarks']
l={}
l.update('a':1)
l.update({'a':1})
l
a=1
b=2
{a:b}
c={a:b}
a,b=c
c.keys()
a=c.keys()
a
type(a)
print(a)
print(srt(a))
print(str(a))
print(l.popitem())
d.values
d.values()
d.keys()
f=d.keys()
list(f)
s='{'潍坊银行2020年校园招聘启事': 'http://wxdonglin.jiuyeb.cn/xiaozhao/details.html?id=973a831b-337f-d760-8d4e-a19ab1031a5d'}'
s=r'{'潍坊银行2020年校园招聘启事': 'http://wxdonglin.jiuyeb.cn/xiaozhao/details.html?id=973a831b-337f-d760-8d4e-a19ab1031a5d'}'
s=r'\{\'潍坊银行2020年校园招聘启事': 'http://wxdonglin.jiuyeb.cn/xiaozhao/details.html?id=973a831b-337f-d760-8d4e-a19ab1031a5d\'\}'
s=r'{\'潍坊银行2020年校园招聘启事\': \'http://w5d\'}'
print(s)
s='{\'潍坊银行2020年校园招聘启事\': \'http://w5d\'}'
import re 
c=re.compile(r'\'(.*)\'')
c.findall(s)
s
c=re.compile(r'\'(.*?)\'')
c.findall(s)
jc.findall(s)
a
j=c.findall(s)
j
for i in j:
    print(j)
    
':'.join(j)
import tensorflow as tf

tf.__version__

## ---(Thu Dec  5 08:05:09 2019)---
import tensorflow as tf

tf.__version__

## ---(Thu Dec  5 09:40:41 2019)---
import tensorflow as tf
tf.__version__
sess = tf.Session() 
a = tf.constant(1) 
b = tf.constant(2) 
print(sess.run(a+b))



## ---(Thu Dec  5 12:53:33 2019)---
with open ('罗密欧与朱丽叶(英文版)莎士比亚.txt')as f: 
     l=re.split(r'[,\s.]\s*',f.read())
     
import re
with open ('罗密欧与朱丽叶(英文版)莎士比亚.txt')as f: 
     l=re.split(r'[,\s.]\s*',f.read())
     
l
from collections import Counter
top_five=Counter(l).most_common(5)
print(top_five)
for w in l:
    wc[w]+=1
    
import jieba
with open ('《基督山伯爵》全集.txt',encoding='utf-8')as f: 
     l=re.split(r'[,\s.]\s*',f.read())
     
with open ('《基督山伯爵》全集.txt',encoding='gbk')as f: 
     l=f.read()
     
with open ('《基督山伯爵》全集.txt',encoding='utf-8')as f: 
     j=f.read()
     
with open ('《基督山伯爵》全集.txt',encoding='gbk')as f: 
     j=f.read()
     
l=jieba.lcut(j)
top_five=Counter(l).most_common(5)
print(top_five)
with open ('《基督山伯爵》全集.txt',encoding='utf-8')as f: 
     j=f.read()
     
l=jieba.lcut(j)
top_five=Counter(l).most_common(5)
print(top_five)
l[0:100]
top_five=Counter(l).most_common(30)
print(top_five)
top_five=Counter(l).most_common(99)
print(top_five)
top_five=Counter(l).most_common(200)
print(top_five)
import re 
ls='    aafaf,    222    '
re.split(r'[\s,]\s*)
re.split(r'[\s,]\s*')
re.split(r'[\s,]\s*',ls)
re.split(r'\s*[\s,]\s*',ls)
re.split(r'[\s,]\s*',ls)
ls
ls='aafaf,    222'
re.split(r'[\s,]\s*',ls)
ls='    aafaf,    222    '
l=re.split(r'[\s,]\s*',ls)
l.insert('')
l.remove('')
l
l.remove(' ')
l.remove('')
l
'222' not in l
s='abcde'
re.match(r'de$',s)
re.match(r'de$',s).group(0)
a=re.match(r'de$',s)
a
a.group()
if a
if re.match(r'de$',s):
    print('d')
    
if re.match(r'de$',s):
    print('d')
    
if re.match(r'^a',s):
    print('d')
    
if re.match(r'^abc',s):
    print('d')
    
if re.match(r'$cd',s):
    print('d')
    
if re.match(r'$de',s):
    print('d')
    
if re.match(r'de$',s):
    print('d')
    
if re.match(r'e$',s):
    print('d')
    
s.endswith('de')
if re.match(r'de$',s):
    print(re.match(r'de$',s).group())
    
if re.match(r'e$',s):
    print(re.match(r'de$',s).group())
qq='56454'
m2 = re.match(r'^[1-9]\d{4,11}$', qq)
m2.group()
if re.match(r'^ae$',s):
    print(re.match(r'de$',s).group())
    
if re.match(r'e$',s):
    print(re.match(r'de$',s).group())
    
s='abd bcd'
if re.match(r'e$',s):
    print(re.match(r'de$',s).group())
    
s='abc bcd bbb'
if re.match(r'^b',s):
    print(re.match(r'de$',s).group())
    
if re.match(r'^a',s):
    print(re.match(r'de$',s).group())
    
if re.findall(r'^a',s):
    print(re.match(r'de$',s).group())
    
if re.findall(r'5$','12345'):
    print(re.match(r'de$',s).group())
    
if re.findall(r'de$','abcde'):
    pritn('$')
    
import re


def main():
    username = input('请输入用户名: ')
    qq = input('请输入QQ号: ')
    # match函数的第一个参数是正则表达式字符串或正则表达式对象
    # 第二个参数是要跟正则表达式做匹配的字符串对象
    m1 = re.match(r'^[0-9a-zA-Z_]{6,20}$', username)
    if not m1:
        print('请输入有效的用户名.')
    m2 = re.match(r'^[1-9]\d{4,11}$', qq)
    if not m2:
        print('请输入有效的QQ号.')
    if m1 and m2:
        print('你输入的信息是有效的!')


if __name__ == '__main__':
    main()
    
def main():
    poem = '窗前明月光，疑是地上霜。举头望明月，低头思故乡。'
    sentence_list = re.split(r'[，。, .]', poem)
    print(sentence_list)  # ['窗前明月光', '疑是地上霜', '举头望明月', '低头思故乡']


if __name__ == '__main__':
    main()
    
from tempfile import TemporaryFile
with TemporaryFile('w+t') as f
with TemporaryFile('w+t') as f:
    f.write('Hello')
    f.seek(0)
    data=f.read()
    
with TemporaryFile('w+t') as f:
    f.write('Hello')
    #f.seek(0)
    data2=f.read()
    
from tempfile import NamedTemporaryFile
with NamedTemporaryFile('w+t')as f: ('filename is:',f.name)
with NamedTemporaryFile('w+t')as f:\ ('filename is:',f.name)
with NamedTemporaryFile('w+t')as f:
    print('filename is:',f.name)
    
from tempfile import TemporaryDirectory
with TemporaryDirectory('w+t')as f:
    print('filename is:',f.name)
    
with TemporaryDirectory('w+t')as f:
    print('filename is:',f.dirname)
    
with TemporaryDirectory('w+t')as f:
    print('filename is:',f)
    
import tempfile
tempfile.gettempdir()
tempfile.mkdtemp()
tempfile.mkstemp()
f=NamedTemporaryFile(prefix='mytemp',suffix=''txt',dir='/tem')
f=NamedTemporaryFile(prefix='mytemp',suffix='.txt',dir='/tem')
 import pickle
data=dict(i:i**2 for i in range(4))
data={i:i**2 for i in range(4)}
f=open('x.txt','wb')
pickle.dump(data,f)
s=pickle.dumps(data)
f.close()
f=open('x.txt','rb')
data2=pickle.load(f)
data2
s
data=pickle.loads(s)
data
top_five=Counter(l).most_common(200)
print(top_five)
[('，', 47809), ('的', 33271), ('\u3000', 26197), ('。', 22237), ('-', 16573), ('“', 15142), ('\n', 15108), ('”', 15005), ('=', 14076), (' ', 13458), ('他', 13267), ('了', 13068), ('我', 12925), ('是', 7049), ('在', 6566), ('你', 5759), ('？', 4478), ('说', 4477), ('您', 3563), ('―', 3516), ('那', 3415), ('一个', 3402), ('！', 3388), ('就', 3001), ('她', 2991), ('人', 2680), ('和', 2573), ('着', 2333), ('不', 2313), ('把', 2269), ('去', 2110), ('但', 2110), ('到', 2092), ('来', 2052), ('里', 2042), ('这', 1989), ('有', 1957), ('我们', 1931), ('也', 1918), ('都', 1890), ('他们', 1771), ('上', 1722), ('伯爵', 1715), ('地', 1614), ('吗', 1533), ('吧', 1471), ('先生', 1468), ('什么', 1431), ('很', 1417), ('可以', 1370), ('没有', 1350), ('对', 1324), ('那个', 1321), ('知道', 1315), ('时候', 1299), ('要', 1297), ('而', 1285), ('基督山', 1230), ('又', 1213), ('说道', 1189), ('因为', 1140), ('这个', 1132), ('维尔', 1072), ('自己', 1071), ('这样', 1056), ('会', 1047), ('给', 1017), ('还', 992), ('从', 987), ('得', 982), ('现在', 963), ('呢', 959), ('过', 947), ('想', 933), ('福', 912), ('向', 907), ('已', 904), ('用', 883), ('已经', 880), ('它', 874), ('’', 871), ('‘', 857), ('阿尔贝', 818), ('好', 807), ('被', 785), ('・', 774), ('那么', 744), ('格拉', 730), ('却', 722), ('走', 718), ('使', 716), ('尔', 709), ('莫雷尔', 706), ('蒂娜', 696), ('：', 690), ('所', 689), ('当', 686), ('这种', 680), ('就是', 676), ('不是', 675), ('并', 673), ('象', 671), ('腾', 668), ('阁下', 653), ('一种', 651), ('一样', 650), ('瓦朗', 648), ('；', 646), ('唐太斯', 640), ('能', 608), ('所以', 605), ('让', 603), ('事', 600), ('看到', 594), ('夫人', 591), ('回答', 588), ('做', 585), ('看', 570), ('卡', 568), ('弗兰兹', 560), ('一', 558), ('再', 556), ('告诉', 543), ('只', 537), ('以后', 536), ('假如', 534), ('那种', 534), ('房间', 532), ('噢', 532), ('父亲', 531), ('然后', 524), ('请', 511), ('那些', 505), ('朋友', 502), ('一切', 499), ('一下', 498), ('啊', 497), ('起来', 495), ('那儿', 476), ('一定', 474), ('一点', 473), ('而且', 473), ('希望', 470), ('、', 464), ('的话', 457), ('呀', 456), ('事情', 455), ('离开', 445), ('或', 445), ('听', 438), ('谁', 435), ('为', 435), ('曾', 428), ('死', 422), ('于是', 420), ('非常', 418), ('眼睛', 413), ('觉得', 411), ('答道', 410), ('带', 409), ('德鲁', 408), ('地方', 404), ('两个', 404), ('你们', 400), ('这些', 400), ('这儿', 395), ('那样', 391), ('只是', 391), ('塞夫', 387), ('啦', 385), ('东西', 383), ('中', 382), ('声音', 381), ('最', 378), ('问', 372), ('上帝', 371), ('听到', 371), ('不会', 370), ('马尔', 369), ('怎么', 368), ('叫', 367), ('以前', 366), ('还是', 364), ('象是', 362), ('便', 357), ('一次', 352), ('更', 351), ('可', 350), ('真的', 346), ('不能', 342), ('相信', 341), ('一位', 340), ('出来', 340), ('诺瓦', 340), ('马车', 338), ('如果', 337), ('等', 332), ('看见', 328), ('亲爱', 325), ('巴黎', 323)]

import re 

ls='    aafaf,    222    '

re.split(r'[\s,]\s*)
  File "<ipython-input-26-dc6900521d80>", line 1
    re.split(r'[\s,]\s*)
                        ^
SyntaxError: EOL while scanning string literal




re.split(r'[\s,]\s*')
Traceback (most recent call last):

  File "<ipython-input-27-dfd870dd4b08>", line 1, in <module>
    re.split(r'[\s,]\s*')

TypeError: split() missing 1 required positional argument: 'string'




re.split(r'[\s,]\s*',ls)
Out[28]: ['', 'aafaf', '222', '']

re.split(r'\s*[\s,]\s*',ls)
Out[29]: ['', 'aafaf', '222', '']

re.split(r'[\s,]\s*',ls)
Out[30]: ['', 'aafaf', '222', '']

ls
Out[31]: '    aafaf,    222    '

ls='aafaf,    222'

re.split(r'[\s,]\s*',ls)
Out[33]: ['aafaf', '222']

ls='    aafaf,    222    '

l=re.split(r'[\s,]\s*',ls)

l.insert('')
Traceback (most recent call last):

  File "<ipython-input-36-574cdea338d2>", line 1, in <module>
    l.insert('')

TypeError: insert() takes exactly 2 arguments (1 given)




l.remove('')

l
Out[38]: ['aafaf', '222', '']

l.remove(' ')
Traceback (most recent call last):

  File "<ipython-input-39-711fff61d7f8>", line 1, in <module>
    l.remove(' ')

ValueError: list.remove(x): x not in list




l.remove('')

l
Out[41]: ['aafaf', '222']

'222' not in l
Out[42]: False

s='abcde'

re.match(r'de$',s)

re.match(r'de$',s).group(0)
Traceback (most recent call last):

  File "<ipython-input-45-21fc005a303f>", line 1, in <module>
    re.match(r'de$',s).group(0)

AttributeError: 'NoneType' object has no attribute 'group'




a=re.match(r'de$',s)

a

a.group()
Traceback (most recent call last):

  File "<ipython-input-48-567322dbc5b9>", line 1, in <module>
    a.group()

AttributeError: 'NoneType' object has no attribute 'group'




if a
  File "<ipython-input-49-95806c26c887>", line 1
    if a
        ^
SyntaxError: invalid syntax




if re.match(r'de$',s):
    print('d')
    

if re.match(r'de$',s):
    print('d')
    

if re.match(r'^a',s):
    print('d')
    
d

if re.match(r'^abc',s):
    print('d')
    

d

if re.match(r'$cd',s):
    print('d')
    

if re.match(r'$de',s):
    print('d')
    

if re.match(r'de$',s):
    print('d')
    

if re.match(r'e$',s):
    print('d')
    

s.endswith('de')
Out[58]: True

if re.match(r'de$',s):
    print(re.match(r'de$',s).group())
    

if re.match(r'e$',s):
    print(re.match(r'de$',s).group())


qq='56454'

m2 = re.match(r'^[1-9]\d{4,11}$', qq)

m2.group()

Out[63]: '56454'

if re.match(r'^ae$',s):
    print(re.match(r'de$',s).group())
    

if re.match(r'e$',s):
    print(re.match(r'de$',s).group())
    

s='abd bcd'

if re.match(r'e$',s):
    print(re.match(r'de$',s).group())
    

s='abc bcd bbb'

if re.match(r'^b',s):
    print(re.match(r'de$',s).group())
    

if re.match(r'^a',s):
    print(re.match(r'de$',s).group())
    
Traceback (most recent call last):

  File "<ipython-input-70-db47c4d34a02>", line 2, in <module>
    print(re.match(r'de$',s).group())

AttributeError: 'NoneType' object has no attribute 'group'




if re.findall(r'^a',s):
    print(re.match(r'de$',s).group())
    
Traceback (most recent call last):

  File "<ipython-input-71-f87cf8bc5b6d>", line 2, in <module>
    print(re.match(r'de$',s).group())

AttributeError: 'NoneType' object has no attribute 'group'




if re.findall(r'5$','12345'):
    print(re.match(r'de$',s).group())
    
Traceback (most recent call last):

  File "<ipython-input-72-e5b47c639aa4>", line 2, in <module>
    print(re.match(r'de$',s).group())

AttributeError: 'NoneType' object has no attribute 'group'




if re.findall(r'de$','abcde'):
    pritn('$')
    
Traceback (most recent call last):

  File "<ipython-input-73-6b0eb61a9fbe>", line 2, in <module>
    pritn('$')

NameError: name 'pritn' is not defined




import re


def main():
    username = input('请输入用户名: ')
    qq = input('请输入QQ号: ')
    # match函数的第一个参数是正则表达式字符串或正则表达式对象
    # 第二个参数是要跟正则表达式做匹配的字符串对象
    m1 = re.match(r'^[0-9a-zA-Z_]{6,20}$', username)
    if not m1:
        print('请输入有效的用户名.')
    m2 = re.match(r'^[1-9]\d{4,11}$', qq)
    if not m2:
        print('请输入有效的QQ号.')
    if m1 and m2:
        print('你输入的信息是有效的!')


if __name__ == '__main__':
    main()
    

请输入用户名: 15615615165165165516

请输入QQ号: 
请输入有效的QQ号.

def main():
    poem = '窗前明月光，疑是地上霜。举头望明月，低头思故乡。'
    sentence_list = re.split(r'[，。, .]', poem)
    print(sentence_list)  # ['窗前明月光', '疑是地上霜', '举头望明月', '低头思故乡']


if __name__ == '__main__':
    main()
    
['窗前明月光', '疑是地上霜', '举头望明月', '低头思故乡', '']

from tempfile import TemporaryFile

with TemporaryFile('w+t') as f
  File "<ipython-input-77-32507dcbd29d>", line 1
    with TemporaryFile('w+t') as f
                                  ^
SyntaxError: invalid syntax




with TemporaryFile('w+t') as f:
    f.write('Hello')
    f.seek(0)
    data=f.read()
    


with TemporaryFile('w+t') as f:
    f.write('Hello')
    #f.seek(0)
    data2=f.read()
    

from tempfile import NamedTemporaryFile

with NamedTemporaryFile('w+t')as f: ('filename is:',f.name)

with NamedTemporaryFile('w+t')as f:\ ('filename is:',f.name)
  File "<ipython-input-82-63c36550f835>", line 1
    with NamedTemporaryFile('w+t')as f:\ ('filename is:',f.name)
                                                                ^
SyntaxError: unexpected character after line continuation character




with NamedTemporaryFile('w+t')as f:
    print('filename is:',f.name)
    
filename is: C:\Users\16476\AppData\Local\Temp\tmpwv6yhj6v

from tempfile import TemporaryDirectory

with TemporaryDirectory('w+t')as f:
    print('filename is:',f.name)
    
Traceback (most recent call last):

  File "<ipython-input-85-1596d96fd8a0>", line 2, in <module>
    print('filename is:',f.name)

AttributeError: 'str' object has no attribute 'name'




with TemporaryDirectory('w+t')as f:
    print('filename is:',f.dirname)
    
Traceback (most recent call last):

  File "<ipython-input-86-98cd03181cbf>", line 2, in <module>
    print('filename is:',f.dirname)

AttributeError: 'str' object has no attribute 'dirname'




with TemporaryDirectory('w+t')as f:
    print('filename is:',f)
    
filename is: C:\Users\16476\AppData\Local\Temp\tmpzpzhbo2yw+t

import tempfile

tempfile.gettempdir()
Out[89]: 'C:\\Users\\16476\\AppData\\Local\\Temp'

tempfile.mkdtemp()
Out[90]: 'C:\\Users\\16476\\AppData\\Local\\Temp\\tmpwdilhsls'

tempfile.mkstemp()
Out[91]: (5, 'C:\\Users\\16476\\AppData\\Local\\Temp\\tmpsvhmm327')

f=NamedTemporaryFile(prefix='mytemp',suffix=''txt',dir='/tem')
  File "<ipython-input-92-387d4792d29a>", line 1
    f=NamedTemporaryFile(prefix='mytemp',suffix=''txt',dir='/tem')
                                                    ^
SyntaxError: invalid syntax




f=NamedTemporaryFile(prefix='mytemp',suffix='.txt',dir='/tem')
Traceback (most recent call last):

  File "<ipython-input-93-9d078fb8fbf0>", line 1, in <module>
    f=NamedTemporaryFile(prefix='mytemp',suffix='.txt',dir='/tem')

  File "D:\Users\16476\Anaconda3\lib\tempfile.py", line 547, in NamedTemporaryFile
    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)

  File "D:\Users\16476\Anaconda3\lib\tempfile.py", line 258, in _mkstemp_inner
    fd = _os.open(file, flags, 0o600)

FileNotFoundError: [Errno 2] No such file or directory: '/tem\\mytempirujzh7v.txt'




 import pickle

data=dict(i:i**2 for i in range(4))
  File "<ipython-input-95-811047708ea3>", line 1
    data=dict(i:i**2 for i in range(4))
               ^
SyntaxError: invalid syntax




data={i:i**2 for i in range(4)}

f=open('x.txt','wb')

pickle.dump(data,f)

s=pickle.dumps(data)

f.close()

f=open('x.txt','rb')

data2=pickle.load(f)

data2
Out[103]: {0: 0, 1: 1, 2: 4, 3: 9}

s
Out[104]: b'\x80\x03}q\x00(K\x00K\x00K\x01K\x01K\x02K\x04K\x03K\tu.'



data=pickle.loads(s)

data
Out[106]: {0: 0, 1: 1, 2: 4, 3: 9}

import pickle

f=open('somedata','wb')

pickle.dump([1,2,3,4],f)

pickle.dump('hello',f)

pickle.dump({'apple','Pear','Hh'},f)

f.close()

f.open('somedata','rb')
Traceback (most recent call last):

  File "<ipython-input-113-43a27d019ca9>", line 1, in <module>
    f.open('somedata','rb')

AttributeError: '_io.BufferedWriter' object has no attribute 'open'




f=open('somedata','rb')

pickle.load(f)
Out[115]: [1, 2, 3, 4]

pickle.load(f)
Out[116]: 'hello'

pickle.load(f)
Out[117]: {'Hh', 'Pear', 'apple'}

pickle.load(f)
Traceback (most recent call last):

  File "<ipython-input-118-5f9e95a79b13>", line 1, in <module>
    pickle.load(f)

EOFError: Ran out of input

s
Python 3.5.6 |Anaconda, Inc.| (default, Aug 26 2018, 16:05:27) [MSC v.1900 64 bit (AMD64)]
Type "copyright", "credits" or "license" for more information.

IPython 6.5.0 -- An enhanced Interactive Python.

import numpy as np

a=np.random.RandomState().rand(3,2)

a
Out[3]: 
array([[0.49897133, 0.07697285],
       [0.7191427 , 0.6221541 ],
       [0.33238483, 0.65880721]])

a[1]
Out[4]: array([0.7191427, 0.6221541])

a[1:3]
Out[5]: 
array([[0.7191427 , 0.6221541 ],
       [0.33238483, 0.65880721]])

a[1:2:3]
Out[6]: array([[0.7191427, 0.6221541]])

a[1:2:3][1]
Traceback (most recent call last):

  File "<ipython-input-7-42dcadb3e78b>", line 1, in <module>
    a[1:2:3][1]

IndexError: index 1 is out of bounds for axis 0 with size 1




a[1,1]
Out[8]: 0.6221541030365795

a[1:3,1]
Out[9]: array([0.6221541 , 0.65880721])

b=a[1:3,1]

b.shape()
Traceback (most recent call last):

  File "<ipython-input-11-f74cf9dd84e0>", line 1, in <module>
    b.shape()

TypeError: 'tuple' object is not callable




b.shape
Out[12]: (2,)

np.matmul(b,a)
Traceback (most recent call last):

  File "<ipython-input-13-1679ee62b0c5>", line 1, in <module>
    np.matmul(b,a)

ValueError: shapes (2,) and (3,2) not aligned: 2 (dim 0) != 3 (dim 0)




np.matmul(a,b)
Out[14]: array([0.36114733, 0.85729719, 0.64082152])

np.matmul(a,b).T
Out[15]: array([0.36114733, 0.85729719, 0.64082152])

b
Out[16]: array([0.6221541 , 0.65880721])

b.T
Out[17]: array([0.6221541 , 0.65880721])

a.T
Out[18]: 
array([[0.49897133, 0.7191427 , 0.33238483],
       [0.07697285, 0.6221541 , 0.65880721]])

c=np.array([1,2])

c.T
Out[20]: array([1, 2])

c=np.array([[1,2]])

c.T
Out[22]: 
array([[1],
       [2]])

np.matmul(a,c).T
Traceback (most recent call last):

  File "<ipython-input-23-b64e43bce6d0>", line 1, in <module>
    np.matmul(a,c).T

ValueError: shapes (3,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)




np.matmul(c,a).T
Traceback (most recent call last):

  File "<ipython-input-24-dd188846769f>", line 1, in <module>
    np.matmul(c,a).T

ValueError: shapes (1,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)




np.matmul(a,c.T).T
Out[25]: array([[0.65291703, 1.9634509 , 1.64999924]])

np.matmul(a,c.T)
Out[26]: 
array([[0.65291703],
       [1.9634509 ],
       [1.64999924]])

np.matmul(a.T,c)
Traceback (most recent call last):

  File "<ipython-input-27-ee80f5f4212e>", line 1, in <module>
    np.matmul(a.T,c)

ValueError: shapes (2,3) and (1,2) not aligned: 3 (dim 1) != 1 (dim 0)




b
Out[28]: array([0.6221541 , 0.65880721])

np.matmul(b,c)
Traceback (most recent call last):

  File "<ipython-input-29-d17efbbf6ff2>", line 1, in <module>
    np.matmul(b,c)

ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)




np.matmul(c,b)
Out[30]: array([1.93976852])

b
Out[31]: array([0.6221541 , 0.65880721])

b.shape()
Traceback (most recent call last):

  File "<ipython-input-32-f74cf9dd84e0>", line 1, in <module>
    b.shape()

TypeError: 'tuple' object is not callable




b.shape
Out[33]: (2,)

b.shape(2,1)
Traceback (most recent call last):

  File "<ipython-input-34-67b0810f0cef>", line 1, in <module>
    b.shape(2,1)

TypeError: 'tuple' object is not callable




b.reshape(2,1)
Out[35]: 
array([[0.6221541 ],
       [0.65880721]])

b.reshape(1,2)
Out[36]: array([[0.6221541 , 0.65880721]])

c
Out[37]: array([[1, 2]])

import sqlite3

db=sqlite3.connect('database.db')

c=db.cursor()

c.execute('create table portfolio (symbol text, shares integer, price real)')
Out[41]: <sqlite3.Cursor at 0x21757a196c0>

db.commit()

stocks = [('goog',100,490.1),
('appl',1,2)]

c.executemany('insert into portfolio values (?,?,?)',stocks)
Out[44]: <sqlite3.Cursor at 0x21757a196c0>

bd.commit()
Traceback (most recent call last):

  File "<ipython-input-45-76f36e595469>", line 1, in <module>
    bd.commit()

NameError: name 'bd' is not defined




db.commit()

for row in db.execute('select * from portfolio'):
    pritn(row)
    
Traceback (most recent call last):

  File "<ipython-input-47-fd8bcf618614>", line 2, in <module>
    pritn(row)

NameError: name 'pritn' is not defined




for row in db.execute('select * from portfolio'):
    print(row)
    
('goog', 100, 490.1)
('appl', 1, 2.0)